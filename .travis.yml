
sudo: required
dist: trusty

language: c

before_install:
  - |
    DEPS_DIR="${TRAVIS_BUILD_DIR}/deps"
    mkdir ${DEPS_DIR} && cd ${DEPS_DIR}

  # Get cmake v3.6
  - CMAKE_URL="https://cmake.org/files/v3.6/cmake-3.6.2-Linux-x86_64.tar.gz"
  - mkdir cmake && travis_retry wget --no-check-certificate --quiet -O - ${CMAKE_URL} | tar --strip-components=1 -xz -C cmake
  - export PATH=${DEPS_DIR}/cmake/bin:${PATH}
  - cd ..

  # Install GCC ARM
  - sudo add-apt-repository -y ppa:team-gcc-arm-embedded/ppa
  - sudo apt-get -qq update
  - sudo apt-get -qq install -y --force-yes gcc-arm-embedded
  - arm-none-eabi-gcc --version

  # Get rust
  - curl https://sh.rustup.rs -sSf | sh -s -- -y --default-toolchain nightly
  - export PATH=~/.cargo/bin:${PATH}
  - rustup component add rust-src

  # Pystache needed for generation of MourOS diagnostic code
  - sudo pip install pystache

  # Needed for generation of coverage reports
  - sudo pip install gcovr

  # Create the build directories
  - |
    mkdir build
    mkdir build/install


install:
  # Install libopencm3
  - ./libsrc/mouros/build_libopencm3.sh ./build/install

before_script:
  # Generate the makefiles
  - |
    mkdir build/ratfist
    mkdir build/ratfist-tests

  - cd build/ratfist
  - cmake -DCMAKE_INSTALL_PREFIX=../install -DCMAKE_TOOLCHAIN_FILE=../../libsrc/mouros/cmake/arm-none-eabi-toolchain.cmake -DCHIP_FAMILY=${CHIP_FAMILY} -DBOARD_TYPE=${BOARD_TYPE} -DCMAKE_BUILD_TYPE=${BUILD_TYPE} -DUSE_FULL_NEWLIB=ON -DINCLUDE_SPINNER=${INCLUDE_SPINNER} -DINCLUDE_METEO=${INCLUDE_METEO} ../..
  - cd ../..

  - cd build/ratfist-tests
  - cmake -DCMAKE_INSTALL_PREFIX=../install -DCMAKE_TOOLCHAIN_FILE=../../libsrc/mouros/cmake/gcc-linux-x86-toolchain.cmake -DCMAKE_BUILD_TYPE=${BUILD_TYPE} -DBOARD_TYPE=${BOARD_TYPE} ../../tests
  - cd ../..



script:
  # Build it
  - cmake --build build/ratfist --clean-first
  # And the docs
  - cmake --build build/ratfist --target ratfist-doc
  # Install them so that the tests can find them
  - cmake --build build/ratfist --target install
  # Build & run tests
  - cd build/ratfist-tests
  - cmake --build . --clean-first
  - ctest -V .
  - cd ../..
  # Generate coverage
  - cmake --build build/ratfist-tests --target coverage



addons:
  apt:
    packages:
      # 32 bit compiler used for compiling tests
      - gcc-multilib
      # Documentation tools
      - doxygen
      - graphviz

env:
  - |
    CHIP_FAMILY=STM32F0
    BOARD_TYPE=stm32f072discovery
    BUILD_TYPE=Debug
    INCLUDE_SPINNER=1
    INCLUDE_METEO=0
  - |
    CHIP_FAMILY=STM32F0
    BOARD_TYPE=stm32f072discovery
    BUILD_TYPE=Release
    INCLUDE_SPINNER=1
    INCLUDE_METEO=0
  - |
    CHIP_FAMILY=STM32F4
    BOARD_TYPE=stm32f411discovery
    BUILD_TYPE=Debug
    INCLUDE_SPINNER=1
    INCLUDE_METEO=1
  - |
    CHIP_FAMILY=STM32F4
    BOARD_TYPE=stm32f411discovery
    BUILD_TYPE=Release
    INCLUDE_SPINNER=1
    INCLUDE_METEO=1
